// Code generated by go-swagger; DO NOT EDIT.

package groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetGroupIDHandlerFunc turns a function with the right signature into a get group ID handler
type GetGroupIDHandlerFunc func(GetGroupIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetGroupIDHandlerFunc) Handle(params GetGroupIDParams) middleware.Responder {
	return fn(params)
}

// GetGroupIDHandler interface for that can handle valid get group ID params
type GetGroupIDHandler interface {
	Handle(GetGroupIDParams) middleware.Responder
}

// NewGetGroupID creates a new http.Handler for the get group ID operation
func NewGetGroupID(ctx *middleware.Context, handler GetGroupIDHandler) *GetGroupID {
	return &GetGroupID{Context: ctx, Handler: handler}
}

/*GetGroupID swagger:route GET /group/{id} groups getGroupId

Gets a groups info

*/
type GetGroupID struct {
	Context *middleware.Context
	Handler GetGroupIDHandler
}

func (o *GetGroupID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetGroupIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
